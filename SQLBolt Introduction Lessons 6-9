/*Lesson 6: Multi-table queries with JOINs

We've added a new table to the Pixar database so that you can try practicing some joins. The BoxOffice table stores information about the ratings and sales of each particular Pixar movie, and the Movie_id column in that table corresponds with the Id column in the Movies table 1-to-1. Try and solve the tasks below using the INNER JOIN introduced above.*/

/*Task 1: Find the domestic and international sales for each movie*/

SELECT title, domestic_sales, international_sales 
FROM movies
JOIN boxoffice
ON movies.id = boxoffice.movie_id;

/*Show the sales numbers for each movie that did better internationally rather than domestically*/

SELECT title, domestic_sales, international_sales
FROM movies
JOIN boxoffice
ON movies.id = boxoffice.movie_id
WHERE international_sales > domestic_sales;

/*List all the movies by their ratings in descending order*/

SELECT title, rating
FROM movies
JOIN boxoffice
ON movies.id = boxoffice.movie_id
ORDER BY rating DESC;



/*Lesson 7: OUTER JOINs

In this exercise, you are going to be working with a new table which stores fictional data about Employees in the film studio and their assigned office Buildings. Some of the buildings are new, so they don't have any employees in them yet, but we need to find some information about them regardless.*/

/*Task: Find the list of all buildings that have employees*/

SELECT DISTINCT building FROM employees;

/*Task: Find the list of all buildings and their capacity*/

SELECT * FROM buildings;

/*List all buildings and the distinct employee roles in each building (including empty buildings)*/

SELECT DISTINCT building_name, role 
FROM buildings 
LEFT JOIN employees
ON building_name = building;
 
 
 
 /*Lesson 8: A short note on NULLs
 
 This exercise will be a sort of review of the last few lessons. We're using the same Employees and Buildings table from the last lesson, but we've hired a few more people, who haven't yet been assigned a building.*/
 
 /*Task: Find the name and role of all employees who have not been assigned to a building*/
 
 SELECT name, role FROM employees
WHERE building IS NULL;

/*Task: Find the names of the buildings that hold no employees*/

SELECT DISTINCT building_name
FROM buildings 
LEFT JOIN employees
ON building_name = building
WHERE role IS NULL;



/*Lesson 9: Queries with expressions

You are going to have to use expressions to transform the BoxOffice data into something easier to understand for the tasks below.*/

/*Task: List all movies and their combined sales in millions of dollars*/

SELECT title, (domestic_sales + international_sales) / 1000000 AS gross_sales_millions
FROM movies
JOIN boxoffice
ON movies.id = boxoffice.movie_id;

/*Task: 

SELECT title, (rating * 10) AS "Raiting Percentage" 
FROM movies 
JOIN boxoffice ON movies.id = boxoffice.movie_id;

/*Task: List all movies that were released on even number years*/

SELECT title, year
FROM movies
WHERE year % 2 = 0;
